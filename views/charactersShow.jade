extends layout

block content

	- function calculateRoll(characteristic) {
	- 	if(characteristic >= 0) {
	- 		return Math.round(9 + (characteristic / 5));
	- 	} else {
			return Math.round(9 - (characteristic / 5));
	- 	}
	- }
	- var slRegex = /(\w*)?Skill Level/

	a(href="/dashboard/" + username)
		span.glyphicon.glyphicon-arrow-left
		| &nbsp;back to Dashboard
	.row
		.col-sm-6
			h1 #{character.alias}
				a(href='/characters/edit/' + character._id).btn.btn-link
					span.glyphicon.glyphicon-edit
					| &nbsp;Edit
				br
				if character.name
					small aka, #{character.name}
			if character.basePool
				p Base Character Point Pool: #{character.basePool}
				p Character Points Spent: #{character.pointsSpent}
			
	.row
		.col-sm-6
			h2 Combat
			.row
				.col-xs-2: abbr(title='Hand-to-Hand') HTH
				.col-xs-6 #{character.HTH}d6
			.row
				.col-xs-2: abbr(title='What the character can just lift, carry a couple paces, then drop') Lift
				.col-xs-6 #{character.Lift}kg
			.row
				.col-xs-2: abbr(title='Offensive Combat Value')  OCV
				.col-xs-6 #{character.CV}
			.row
				.col-xs-2: abbr(title='Defensive Combat Value')  DCV
				.col-xs-6 #{character.CV}
			.row
				.col-xs-2: abbr(title='Offensive Ego Combat Value')  OECV
				.col-xs-6 #{character.ECV}
			.row
				.col-xs-2: abbr(title='Defensive Ego Combat Value')  DECV
				.col-xs-6 #{character.ECV}
		.col-sm-6
			h2 Movement
			.row
				.col-xs-4 Running
				.col-xs-4 #{character.Running}"
			.row
				.col-xs-4 Swimming
				.col-xs-4 #{character.Swimming}"
			.row
				.col-xs-4 Leap
				.col-xs-4 #{character.Leap}"
	
	.row
		.col-sm-6
			h2 Primary Characteristics
			.row
				.col-xs-4.col-sm-3.text-right
					p Characteristic
				.col-xs-3.col-sm-2.text-center
					p Roll
				.col-xs-4
					p Value
			.row
				.col-xs-4.col-sm-3.text-right
					strong STR
				.col-xs-3.col-sm-2.text-center
					strong= '-' + calculateRoll(character.STR + character.STRmod)
				.col-xs-4
					p= character.STR + character.STRmod
			.row
				.col-xs-4.col-sm-3.text-right
					strong DEX
				.col-xs-3.col-sm-2.text-center
					strong= '-' + calculateRoll(character.DEX + character.DEXmod)
				.col-xs-4
					p= character.DEX + character.DEXmod
			.row
				.col-xs-4.col-sm-3.text-right
					strong CON
				.col-xs-3.col-sm-2.text-center
					strong= '-' + calculateRoll(character.CON + character.CONmod)
				.col-xs-4
					p= character.CON + character.CONmod
			.row
				.col-xs-4.col-sm-3.text-right
					strong BODY
				.col-xs-3.col-sm-2.text-center
					strong= '-' + calculateRoll(character.BODY + character.BODYmod)
				.col-xs-4
					p= character.BODY + character.BODYmod
			.row
				.col-xs-4.col-sm-3.text-right
					strong INT
				.col-xs-3.col-sm-2.text-center
					strong= '-' + calculateRoll(character.INT + character.INTmod)
				.col-xs-4 
					p= character.INT + character.INTmod
			.row
				.col-xs-4.col-sm-3.text-right
					strong EGO
				.col-xs-3.col-sm-2.text-center
					strong= '-' + calculateRoll(character.EGO + character.EGOmod)
				.col-xs-4 
					p= character.EGO + character.EGOmod
			.row
				.col-xs-4.col-sm-3.text-right
					strong PRE
				.col-xs-3.col-sm-2.text-center
					strong= '-' + calculateRoll(character.PRE + character.PREmod)
				.col-xs-4 
					p= character.PRE + character.PREmod
			.row
				.col-xs-4.col-sm-3.text-right
					strong COM
				.col-xs-3.col-sm-2.text-center
					strong= '-' + calculateRoll(character.COM + character.COMmod)
				.col-xs-4 
					p= character.COM + character.COMmod

		.col-sm-6
			h2 Figured Characteristics
			.row
				.col-xs-4.text-right
					p Characteristic
				.col-xs-4
					p Value
			.row
				.col-xs-4.text-right
					strong PD
				.col-xs-4
					p= character.PD + character.PDmod
			.row
				.col-xs-4.text-right
					strong ED
				.col-xs-4
					p= character.ED + character.EDmod
			.row
				.col-xs-4.text-right
					strong SPD
				.col-xs-4
					p= character.SPD + character.SPDmod
			.row
				.col-xs-4.text-right
					strong END
				.col-xs-4
					p= character.END + character.ENDmod
			.row
				.col-xs-4.text-right
					strong STUN
				.col-xs-4
					p= character.STUN + character.STUNmod

	.row
		.col-sm-6#skills
			h2 Skills
			.row
				.col-xs-6
					strong Skill
				.col-xs-6
					strong Roll

			//- Can be used to sort any part of the skill. Right now, sorting by skill type
			- function sortAlphabetically(a, b) { 
				- 	if(a.skillType.type > b.skillType.type) {
				- 		 return 1;
				- 	} else if(a.skillType.type < b.skillType.type) {
				- 		 return -1;
				- 	}
				- 	return 0;
				- }
				- character.Skills.sort(sortAlphabetically);
			each skill, i in character.Skills
				//- = console.log(skill)
				if skill.subcategories && skill.subcategories.length > 0
					if skill.skillType.name == 'Transport Familiarity'
						each subcategory, i in skill.subcategories
							.row
								.col-xs-6
									p TF: #{subcategory}
								if skill.roll != 0 && skill.roll != null && skill.roll != undefined
									.col-xs-6
										p -#{skill.roll}

				else if skill.categories && skill.categories.length > 0
					if skill.skillType.name =='Animal Handler'
						.row
								.col-xs-6
									p #{skill.skillType.name}: 
										each category, i in skill.categories
											| #{category.name}
											if i != skill.categories.length - 1
												| , 
								if skill.roll != 0 && skill.roll != null && skill.roll != undefined
									.col-xs-6
										p -#{skill.roll}
					else if skill.skillType.name == 'Transport Familiarity'
						each category, i in skill.categories
							.row
								.col-xs-6
									p TF: #{category}
								if skill.roll != 0 && skill.roll != null && skill.roll != undefined
									.col-xs-6
										p -#{skill.roll}
					
				else if skill.skillType.name.match(slRegex) && skill.skillOptions
					- var slOptions = ""
					//- - console.log(skill)
					.row
						.col-xs-6
							p
								each option, key in skill.skillOptions
									- slOptions += option + ', '
								if slOptions != ""
									| +1 to 
									= slOptions.replace(/,\s?$/, '', function(str){ return str; })
								else
									= console.log(skill)
				else
					- var skillName = skill.skillType.name
					//- console.log(skill)
					if skillName.match(/Professional Skill/)
						.row
							.col-xs-6
								p PS: #{skill.skillOptions.professionalSkillArea}
							.col-xs-6
								p -#{skill.roll}
					else if skillName.match(/Knowledge Skill/)
						.row
							.col-xs-6
								p #{skill.skillOptions.knowledgeSkillType} Knowledge: #{skill.skillOptions.knowledgeSkillArea}
							.col-xs-6
								p -#{skill.roll}
					else
						.row
							.col-xs-6
								if skill.skillType.name == 'Language (Basic Conversation)' || skill.skillType.name == 'Language (Fluent Conversation)' || skill.skillType.name == 'Language (Completely Fluent, with Accent)' || skill.skillType.name == 'Language (Idiomatic, native accent)' || skill.skillType.name == 'Language (Imitate Dialects)'
									p #{skill.skillType.name}: #{skill.skillOptions.language}
								else
									p #{skill.skillType.name}
							if skill.roll != 0 && skill.roll != null && skill.roll != undefined
								.col-xs-6
									p -#{skill.roll}


	h2 Description
	p #{character.description}

	script(rel='text/javascript', src='/js/charactersShow.js')