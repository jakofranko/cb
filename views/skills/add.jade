extends ../layout

block content
	- function sortAlphabetically(a, b) { 
	- 	if(a.skillType.name > b.skillType.name) {
	- 		 return 1;
	- 	} else if(a.skillType.name < b.skillType.name) {
	- 		 return -1;
	- 	}
	- 	return 0;
	- }
	- character.Skills.sort(sortAlphabetically);

	h1 #{title}
		a(href="/characters/skills/" + character._id).btn.btn-link Back
	include ../_common/pointTotals

	if character.skillEnhancers.length > 0
		.row
			.col-sm-4
				p
					strong Skill Enhancers: 
					for se, i in character.skillEnhancers
						| #{se}
						if i != character.skillEnhancers.length - 1
							| , 
	.row
		.col-sm-4
			p.lead Skill Cost: 
				span#skillCost 0
			p.lead Roll: -
				span#roll
				input(type='hidden', name='baseRoll')#baseRoll
				input(type='hidden', name='rollMod')#rollMod
		.col-sm-4
			#skillDesciption
				//- TODO: add skill description here that fades in and out when the skill changes
	form(method="post", action="/characters/addSkill")#addSkillForm
		.row
			.col-sm-4
				.form-group
					label(for='skilltype').control-label Select Skill
					select(name='skilltype', required).form-control#skilltype
						option(value='') Please Select Skill

						//- A list of skills that should not be excluded if the character has already purchased them
						//- TODO: Should check to see if any other Defensive maneuvers have been purchased, and only display the highest available (The character should not be able to buy multiple Defensive Maneuvers)
						//- TODO: Should also exclude the everyman skills selected by the GM for the character's campaign
						- var hasSkill = false;
						- var CSL = /Combat Skill Level/;
						- var PSL = /Penalty Skill Level/;
						- var SL  = /Skill Level/;
						- var KS  = /Knowledge Skill/;
						- var PS  = /Professional Skill/;
						- var SS  = /Science Skill/;
						- var lang1 = /Language \(Basic Conversation\)/;
						- var lang2 = /Language \(Fluent Conversation\)/;
						- var lang3 = /Language \(Completely Fluent, with Accent\)/;
						- var lang4 = /Language \(Idiomatic, native accent\)/;
						- var lang5 = /Language \(Imitate Dialects\)/;
						- var rapidAttack = /Rapid Attack/;

						each skilltype, i in skilltypes
							each skill, i in character.Skills
								if skill.skillType.name == skilltype.name
									- hasSkill = true;
									- break;
								else
									- hasSkill = false;
							if !hasSkill || skilltype.name.match(CSL) || skilltype.name.match(PSL) || skilltype.name.match(SL) || skilltype.name.match(KS) || skilltype.name.match(PS) || skilltype.name.match(SS) || skilltype.name.match(lang1) || skilltype.name.match(lang2) || skilltype.name.match(lang3) || skilltype.name.match(lang4) || skilltype.name.match(lang5) || skilltype.name.match(rapidAttack)
								option(value='#{skilltype._id}') #{skilltype.name}
				.checkbox
					label
						input(type="checkbox" name="familiarity", disabled)#familiarity
						| Familiarity
				.form-group#bonusToRoll
					.row
						.col-xs-6
							label(for='modifier').control-label Bonus to roll
							input(type='number', name='modifier', min='0', value='0').form-control#modifier
						.col-xs-6(style='display:none;')#numberOfSLs
							label(for='numberOfSkillLevels').control-label Number of SLs
							input(type='number', name='numberOfSkillLevels', min='1', value='1').form-control
				button(type='button').btn.btn-primary.btn-lg#addSkill
					span.glyphicon.glyphicon-plus
					|  Add Skill
			.col-sm-4#options
				//- Options for skills
				//- --------------------------------------

				//- Combat Skill Levels
				div(style='display:none')#2pointCSLOption
					.form-group
						label(for='2pointCSLattack').control-label Type of Attack
						//- TODO: once powers are built, should be a dropdown of attack powers (which can also be weapons)
						input(name='2pointCSLattack', type='text').form-control#2pointCSLattack
				div(style='display:none')#3pointCSLOption
					.form-group
						label(for='3pointCSLattack1').control-label Any 3 attacks
						//- TODO: once powers are built, should be a dropdown of attack powers (which can also be weapons)
						input(name='3pointCSLattack1', type='text', placeholder='Attack 1').form-control#3pointCSLattack1
						br
						input(name='3pointCSLattack2', type='text', placeholder='Attack 2').form-control#3pointCSLattack2
						br
						input(name='3pointCSLattack3', type='text', placeholder='Attack 3').form-control#3pointCSLattack3
					div - Or -
					br
					.form-group
						label(for='3pointCSLattacks') Tight group of attacks
						input(name='3pointCSLattacks', type='text', placeholder='Group of Attacks').form-control#3pointCSLattacks
				div(style='display:none')#5pointCSLOption
					.form-group
						label(for='5pointCSLattacks').control-label General Group of Attacks
						select(name='5pointCSLattacks', required).form-control#5pointCSLattacks
							option(value='') Select CSL Option
							option(value='HTH') +1 with HTH Combat
							option(value='Ranged') +1 with Ranged Combat
							option(value='Group of Attacks') +1 with a Related Group of Attacks
							option(value='DCV') +1 to DCV
					div(style='display:none').form-group#5pointAttacksOption
						label(for='5pointAttacks') Related Group of Attacks
						input(name='5pointAttacks', type="text").form-control#5pointAttacks

				//- Background Skills
				div(style='display:none')#backgroundSkill
					.checkbox
						label(for='characteristicBased')
							input(type="checkbox" name="characteristicBased")#characteristicBased
							| Characteristic Based?

				//- Language
				div(style='display:none')#languageOption
					.form-group
						label(for='language').control-label Language
						input(type='text', name='language', placeholder='Language', required).form-control#language
					.checkbox
						label
							input(type='checkbox', name='literate')
							| Literate (If not standard for setting)

				//- Knowledge Skill
				div(style='display:none')#knowledgeSkillOption
					.form-group
						label(for='knowledgeSkillType').control-label Knowledge Skill Type
						select(name='knowledgeSkillType', required).form-control#knowledgeSkillType
							option(value='') Select Type
							option(value='Groups') Group(s) Knowledge
							option(value='People') People Knowledge
							option(value='Area') Area Knowledge
							option(value='City') City Knowledge
							option(value='Things') Thing(s) Knowledge
					.form-group
						label(for='knowledgeSkillArea').control-label Area of Knowledge
						input(name='knowledgeSkillArea' type="text" placeholder='Area of Knowledge', required).form-control#knowledgeSkillArea
					.checkbox
						label
							input(type="checkbox" name="visited")
							| Character has visited this place/experienced culture (if an area, city or group knowledge skill)

				//- Penalty Skill Levels
				div(style='display:none')#onePointFivePSLOption
					.form-group
						label(for='halfPointPSLattack').control-label Type of Attack
						//- TODO: once powers are built, should be a dropdown of attack powers (which can also be weapons)
						input(name='halfPointPSLattack', type='text', placeholder='Attack').form-control#halfPointPSLattack
				div(style='display:none')#2pointPSLOption
					.form-group
						label(for='2pointPSLattack1').control-label Any 3 Attacks
						input(name='2pointPSLattack1', type='text', placeholder='Attack 1').form-control#2pointPSLattack1
						br
						input(name='2pointPSLattack2', type='text', placeholder='Attack 2').form-control#2pointPSLattack2
						br
						input(name='2pointPSLattack3', type='text', placeholder='Attack 3').form-control#2pointPSLattack3
					div - Or -
					br
					.form-group
						label(for='2pointPSLattacks') Tight group of attacks
						input(name='2pointPSLattacks', type='text', placeholder='Group of Attacks').form-control#2pointPSLattacks

				//- Power Skill
				div(style='display:none')#powerOption
					.form-group
						label(for='customLabel').control-label Custom Label
						input(name='customLabel', type='text', placeholder='E.G., "Brick Tricks" or "Magic"', required).form-control#customLabel

				//- Professional Skills
				div(style='display:none')#professionalOption
					.form-group
						label(for='professionalSkillArea').control-label Area of Knowledge
						input(name='professionalSkillArea' type="text" placeholder='Area of Knowledge', required).form-control#professionalSkillArea

				//- Rapid Fire
				div(style="display:none")#rapidAttackOption
					.form-group
						label(for='rapidAttackType').control-label Rapid Attack Type
						select(name='rapidAttackType', required).form-control#rapidAttackType
							option(value="") Select Type
							option(value="HTH") HTH
							option(value="Ranged") Ranged

				//- Science Skills
				div(style='display:none')#scienceOption
					.form-group
						label(for='scienceSkillArea').control-label Area of Knowledge
						input(name='scienceSkillArea' type="text" placeholder='Area of Knowledge', required).form-control#scienceSkillArea

				//- Skill Levels
				div(style='display:none')#2pointSLOption
					.form-group
						label(for='2pointSLskill').control-label One Skill
						select(name='2pointSLskill').form-control#2pointSLskill
							option(value='') Select Skill
							each skill, i in character.Skills
								//- Show options for Background skills
								if skill.skillType.name.match(/Language/)
									option(value='#{skill.skillType.name}: #{skill.skillOptions.language}') Language: #{skill.skillOptions.language}
								else if skill.skillType.name.match(/^Power$/)
									option(value='#{skill.skillType.name}: #{skill.skillOptions.customLabel}') Power: #{skill.skillOptions.customLabel}
								else if skill.skillType.name.match(/Knowledge Skill/)
									option(value='#{skill.skillType.name}: #{skill.skillOptions.knowledgeSkillArea}') KS: #{skill.skillOptions.knowledgeSkillArea}
								else if skill.skillType.name.match(/Professional Skill/)
									option(value='#{skill.skillType.name}: #{skill.skillOptions.professionalSkillArea}') PS: #{skill.skillOptions.professionalSkillArea}
								else if skill.skillType.name.match(/Science Skill/)
									option(value='#{skill.skillType.name}: #{skill.skillOptions.scienceSkillArea}') SS: #{skill.skillOptions.scienceSkillArea}
								else if !skill.skillType.name.match(/Skill Level/) && skill.skillType.basePlusOne
									option(value='#{skill.skillType.name}') #{skill.skillType.name}

				div(style='display:none')#3pointSLOption
					.form-group
						label(for='3pointSLskill1').control-label Any 3 Closely Related Skills
						//- TODO: once powers are built, should be a dropdown of attack powers (which can also be weapons)
						select(name='3pointSLskill1', placeholder='Skill 1').form-control#3pointSLskill1
							option(value='') Select Skill
							each skill, i in character.Skills
								//- Show options
								if skill.skillType.name.match(/Language/)
									option(value='#{skill.skillType.name}: #{skill.skillOptions.language}') Language: #{skill.skillOptions.language}
								else if skill.skillType.name.match(/^Power$/)
									option(value='#{skill.skillType.name}: #{skill.skillOptions.customLabel}') Power: #{skill.skillOptions.customLabel}
								else if skill.skillType.name.match(/Knowledge Skill/)
									option(value='#{skill.skillType.name}: #{skill.skillOptions.knowledgeSkillArea}') KS: #{skill.skillOptions.knowledgeSkillArea}
								else if skill.skillType.name.match(/Professional Skill/)
									option(value='#{skill.skillType.name}: #{skill.skillOptions.professionalSkillArea}') PS: #{skill.skillOptions.professionalSkillArea}
								else if skill.skillType.name.match(/Science Skill/)
									option(value='#{skill.skillType.name}: #{skill.skillOptions.scienceSkillArea}') SS: #{skill.skillOptions.scienceSkillArea}
								else if !skill.skillType.name.match(/Skill Level/) && skill.skillType.basePlusOne
									option(value='#{skill.skillType.name}') #{skill.skillType.name}

						br
						select(name='3pointSLskill2', placeholder='Skill 2').form-control#3pointSLskill2
							option(value='') Select Skill
							each skill, i in character.Skills
								//- Show options
								if skill.skillType.name.match(/Language/)
									option(value='#{skill.skillType.name}: #{skill.skillOptions.language}') Language: #{skill.skillOptions.language}
								else if skill.skillType.name.match(/^Power$/)
									option(value='#{skill.skillType.name}: #{skill.skillOptions.customLabel}') Power: #{skill.skillOptions.customLabel}
								else if skill.skillType.name.match(/Knowledge Skill/)
									option(value='#{skill.skillType.name}: #{skill.skillOptions.knowledgeSkillArea}') KS: #{skill.skillOptions.knowledgeSkillArea}
								else if skill.skillType.name.match(/Professional Skill/)
									option(value='#{skill.skillType.name}: #{skill.skillOptions.professionalSkillArea}') PS: #{skill.skillOptions.professionalSkillArea}
								else if skill.skillType.name.match(/Science Skill/)
									option(value='#{skill.skillType.name}: #{skill.skillOptions.scienceSkillArea}') SS: #{skill.skillOptions.scienceSkillArea}
								else if !skill.skillType.name.match(/Skill Level/) && skill.skillType.basePlusOne
									option(value='#{skill.skillType.name}') #{skill.skillType.name}

						br
						select(name='3pointSLskill3', placeholder='Skill 3').form-control#3pointSLskill3
							option(value='') Select Skill
							each skill, i in character.Skills
								//- Show options
								if skill.skillType.name.match(/Language/)
									option(value='#{skill.skillType.name}: #{skill.skillOptions.language}') Language: #{skill.skillOptions.language}
								else if skill.skillType.name.match(/^Power$/)
									option(value='#{skill.skillType.name}: #{skill.skillOptions.customLabel}') Power: #{skill.skillOptions.customLabel}
								else if skill.skillType.name.match(/Knowledge Skill/)
									option(value='#{skill.skillType.name}: #{skill.skillOptions.knowledgeSkillArea}') KS: #{skill.skillOptions.knowledgeSkillArea}
								else if skill.skillType.name.match(/Professional Skill/)
									option(value='#{skill.skillType.name}: #{skill.skillOptions.professionalSkillArea}') PS: #{skill.skillOptions.professionalSkillArea}
								else if skill.skillType.name.match(/Science Skill/)
									option(value='#{skill.skillType.name}: #{skill.skillOptions.scienceSkillArea}') SS: #{skill.skillOptions.scienceSkillArea}
								else if !skill.skillType.name.match(/Skill Level/) && skill.skillType.basePlusOne
									option(value='#{skill.skillType.name}') #{skill.skillType.name}

				div(style='display:none')#5pointSLOption
					.form-group
						label(for='5pointSLskills') Group of Skills
						select(name='5pointSLskills').form-control#3pointSLskills
							option(value="Agility") Agility Skills
							option(value="Background") Background Skills
							option(value="Combat") Combat Skills
							option(value="Intellect") Intellect Skills
							option(value="Interaction") Interaction Skills

				//- Associated Characteristic
				div(style='display:none')#associatedCharacteristicOptions
					.form-group
						label(for='associatedCharacteristic').control-label Associated Characteristic
						select(name='associatedCharacteristic', disabled).form-control#associatedCharacteristic
							option(value="", selected) Select Characteristic
							option(value="STR") STR
							option(value="DEX") DEX
							option(value="INT") INT
							option(value="CON") CON
							option(value="BODY") BODY
							option(value="EGO") EGO
							option(value="PRE") PRE
							option(value="COM") COM
		

			.col-sm-4#categories
				each skilltype, i in skilltypes
					if skilltype.categories.length > 0
						div(id=skilltype._id, style='display: none;').category-group
							h2 #{skilltype.name} Categories
							each category, i in skilltype.categories
								.categories.clearfix
									//- for some reason, this conditional is blocking jquery from finding the subcategories?
									if category.purchasableAsGroup && category.purchasableAsGroup == true
										.checkbox
											label
												input(name=category.name, type='checkbox').category 
												strong #{category.name}
									else
										label #{category.name}
									each subcategory, i in category.subcategories
										.col-xs-10.col-xs-offset-2
											.checkbox
												label
													input(name=subcategory, type='checkbox').subcategory
													| #{subcategory}
			input(type='hidden', value=character._id)#characterID

			.modal.fade#addAnother
				.modal-dialog
					.modal-content
						.modal-header
							button(type='button', data-dismiss='modal').close
								span(aria-hidden='true') &times;
								span.sr-only Close
							h4.modal-title Skill Added!
						.modal-footer.clearfix
							button(type='button').btn.btn-primary#another Add Another Skill
							button(type='button').btn.btn-default#done Back to Skills
	script.
		//- Though character.skillEnhancers is actually an array, jade converts it to a string
		//- and thus it needs to be converted back into an array for use later down the line 
		var skillEnhancers = "#{character.skillEnhancers}".split(",")
	script(rel='text/javascript', src='/js/skills/calculateCost.js')											
	script(rel='text/javascript', src='/js/skills/add.js')